[tool.poetry]
name = "organizations-backend"
version = "0.1.0"
description = "Organizations Management System - Test Assignment Backend API"
authors = ["Ilia Boiarintsev <theilyaboyarintsev@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.116.1"
pydantic = {extras = ["email"], version = "^2.11.7"}
pyyaml = "^6.0"
starlette-exporter = "^0.23.0"
# brotli-asgi = "^1.4.0"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
httpx = "^0.28.1"
pydantic-settings = "^2.10.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43"}
alembic = "^1.16.4"
asyncpg = "^0.30.0"
saq = {extras = ["redis"], version = "^0.25.2"}
that-depends = "^3.5.0"
aioboto3 = "^13.2.0"
aiobotocore = "^2.15.2"
cryptography = "^45.0.6"
python-multipart = "^0.0.20"
redis = {extras = ["hiredis"], version = "^5.3.1"}
elastic-apm = "^6.24.0"
pydantic-extra-types = "^2.10.5"
pycountry = "^24.6.1"
pyotp = "^2.9.0"


[tool.poetry.group.lint.dependencies]
mypy = "^1.17.1"
ruff = "^0.12.9"
pyright = "^1.1.403"
types-pyyaml = "^6.0.12.20250516"
types-aioboto3 = {extras = ["essential", "ses"], version = "^15.0.0"}
types-redis = "^4.6.0.20241004"
types-python-dateutil = "^2.9.0.20250708"

[tool.poetry.group.tests.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-asyncio = "^1.1.0"
openapi-spec-validator = "^0.7.2"
polyfactory = "^2.22.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py313"
exclude = [
    ".git",
    "__pycache__",
]
line-length = 99
fix = true
lint.preview = true
lint.ignore = [
    "D10",  # docstrings
    "D203",  # one-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "D401",  # docstrings imperative mood
    "COM812",  # missing-trailing-comma
    "PLW3201",  # bad-dunder-method-name
]
lint.select = [
    "FAST",  # fastapi
    "B",  # flake8-bugbear
    "TRY",  # tryceratops
    "EM",  # flake8-errmsg
    "C9",  # mccabe
    "D",  # pycodestyle
    "F",  # pyflakes
    "Q",  # flake8-quotes
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "ERA",  # flake8-eradicate
    "DTZ",  # flake8-datetimez
    "UP",  # pyupgrade
    "FBT",  # flake8-boolean-trap
    "I",  # isort
    "RUF",  # ruff specific
    "PL",  # pylint
    "PTH",  # flake8-use-pathlib
    "PIE",  # flake8-pie
    "G",  # flake8-logging-format
    "C4",  # flake8-comprehensions
    "N",  # pep8-naming
    "COM",  # flake8-commas
    "ASYNC",  # flake8-async
    "PGH",  # pygrep-hooks
    "FURB",  # refurb
    "G",  # flake8-logging-format
]

[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.pylint]
max-positional-args = 7
max-args = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
    "F403",
]
"tests/**/test_*.py" = ["D10", "PLR091"]
"app/core/containers.py" = ["ERA001"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-implicit-str-concat]
allow-multiline = false

[tool.pyright]
typeCheckingMode = "basic"
include = ["app", "tests"]
exclude = [
    "**/__pycache__",
]
ignore = []
defineConstant = { DEBUG = true }
stubPath = "src/stubs"
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.13"

[tool.mypy]
plugins = "pydantic.mypy"
# --strict
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
ignore_missing_imports = true
# --strict end
